[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/module3-prac/index.html",
    "href": "posts/module3-prac/index.html",
    "title": "Module 3 Practice Task",
    "section": "",
    "text": "Functions\nAlgorithms\n\n\n\n\nWork effectively with a partner using Pair Programming\nFollow steps to develop a module (mini-project)\nLearn key skills and take notes for the module 3 test\n\n\n\n\n\n\n\nDecide who will be the driver and for how long\nAgree on how to resolve any conflicts\n\nTravel raw data:\nPlan ID: 20250105, Destination: Werribee Open Range Zoo, Transport Method: Car\nPlan ID: 20250118, Destination: Geelong Waterfront, Transport Method: Car\nPlan ID: 20250202, Destination: Torquay Surf Beach, Transport Method: Car\nPlan ID: 20250216, Destination: Great Ocean Road Memorial Arch, Transport Method: Car\nPlan ID: 20250301, Destination: Lorne Pier, Transport Method: Car\nPlan ID: 20250315, Destination: Apollo Bay Harbour, Transport Method: Car\nPlan ID: 20250406, Destination: Twelve Apostles, Transport Method: Car\nPlan ID: 20250420, Destination: Port Campbell National Park, Transport Method: Car\nPlan ID: 20250504, Destination: Warrnambool Botanic Gardens, Transport Method: Car\nPlan ID: 20250518, Destination: Tower Hill Wildlife Reserve, Transport Method: Car\nPlan ID: 20250601, Destination: Port Fairy Wharf, Transport Method: Car\nPlan ID: 20250615, Destination: Hamilton Gallery, Transport Method: Bus\nPlan ID: 20250706, Destination: Hamilton Botanic Gardens, Transport Method: Car\nPlan ID: 20250720, Destination: Hamilton Car Museum, Transport Method: Car\nPlan ID: 20250803, Destination: Mount Gambier Blue Lake, Transport Method: Bus\nPlan ID: 20250817, Destination: Umpherston Sinkhole, Transport Method: Car\nPlan ID: 20250907, Destination: Coonawarra Wine Region, Transport Method: Car\nPlan ID: 20250921, Destination: Naracoorte Caves, Transport Method: Car\nPlan ID: 20251005, Destination: Hahndorf German Village, Transport Method: Car\nPlan ID: 20251019, Destination: Adelaide Central Market, Transport Method: Airplane\n\n\n\n\nUse the given data to create a travel.txt file for your module\nUse file operations (open, read/write, close) to load the data into Python\nCreate a function called show_loaded_data() to display the loaded data\n\nHow to open and read the raw data in Python\nfile = open(\"travel.txt\", \"r\")\n\nbig_string = file.read()\nprint(big_string)\n\nlines = big_string.splitlines()\nfor line in lines:\n    print(line)\n\n# OR\nlines = file.readlines()\nfor line in lines:\n    print(line)\n\n\nfile.close()\n\n\n\n\nConsider four data structure options (list of lists, list of dictionaries, dictionary of dictionaries, dictionary of lists) and choose one\nProcess each row into three items and insert them into the chosen data structure\nUse a loop to display the data in the following order: “Destination”, “Transport Method”, “ID”\nAdd a separator such as a dash between items: Werribee Open Range Zoo - Car - 20250105\nCreate a function called show_data() to display the data\nUse a parameter called separator to allow users to customise the separator\nWrite a doctest to verify that the data type is correct\n\ndef show_data(data, separator=' - '):\n    \"\"\"\n    Display each item in the travel data with the given separator.\n\n    &gt;&gt;&gt; sample_data = [\n    ...     ['Werribee Open Range Zoo', 'Car', '20250105'],\n    ...     ['Melbourne Museum', 'Train', '20250106']\n    ... ]\n    &gt;&gt;&gt; show_data(sample_data, separator=' - ')\n    Werribee Open Range Zoo - Car - 20250105\n    Melbourne Museum - Train - 20250106\n    \"\"\"\n    for row in data:\n        print(separator.join(row))\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n\n\n\n\nChoose one sorting algorithm to implement: either Selection Sort or Quick Sort\nChoose one field (e.g. Destination, Transport Method, or ID) to sort the data by\nCreate a sorting function with parameters like: bubble_sort_by_field(data, field)\n\nNote: To ensure you meet the test requirements, copy both the Selection Sort and Quick Sort Python code into your folder.\n\n\n\n\nLoad and process the data file into the data structure data2d\nWrite a custom test function: test_data2d_row_length()\nWrite a second test function: test_data2d_item_number()\nPropose a third test function:\n\n\n\n\n\nChoose one search algorithm to implement: either Linear Search or Binary Search\nChoose one field to search within the data\nCreate a search function with parameters like: xxx_search_by_field(data, field)"
  },
  {
    "objectID": "posts/module3-prac/index.html#learning-goals",
    "href": "posts/module3-prac/index.html#learning-goals",
    "title": "Module 3 Practice Task",
    "section": "",
    "text": "Work effectively with a partner using Pair Programming\nFollow steps to develop a module (mini-project)\nLearn key skills and take notes for the module 3 test"
  },
  {
    "objectID": "posts/module3-prac/index.html#pair-programming-steps",
    "href": "posts/module3-prac/index.html#pair-programming-steps",
    "title": "Module 3 Practice Task",
    "section": "",
    "text": "Decide who will be the driver and for how long\nAgree on how to resolve any conflicts\n\nTravel raw data:\nPlan ID: 20250105, Destination: Werribee Open Range Zoo, Transport Method: Car\nPlan ID: 20250118, Destination: Geelong Waterfront, Transport Method: Car\nPlan ID: 20250202, Destination: Torquay Surf Beach, Transport Method: Car\nPlan ID: 20250216, Destination: Great Ocean Road Memorial Arch, Transport Method: Car\nPlan ID: 20250301, Destination: Lorne Pier, Transport Method: Car\nPlan ID: 20250315, Destination: Apollo Bay Harbour, Transport Method: Car\nPlan ID: 20250406, Destination: Twelve Apostles, Transport Method: Car\nPlan ID: 20250420, Destination: Port Campbell National Park, Transport Method: Car\nPlan ID: 20250504, Destination: Warrnambool Botanic Gardens, Transport Method: Car\nPlan ID: 20250518, Destination: Tower Hill Wildlife Reserve, Transport Method: Car\nPlan ID: 20250601, Destination: Port Fairy Wharf, Transport Method: Car\nPlan ID: 20250615, Destination: Hamilton Gallery, Transport Method: Bus\nPlan ID: 20250706, Destination: Hamilton Botanic Gardens, Transport Method: Car\nPlan ID: 20250720, Destination: Hamilton Car Museum, Transport Method: Car\nPlan ID: 20250803, Destination: Mount Gambier Blue Lake, Transport Method: Bus\nPlan ID: 20250817, Destination: Umpherston Sinkhole, Transport Method: Car\nPlan ID: 20250907, Destination: Coonawarra Wine Region, Transport Method: Car\nPlan ID: 20250921, Destination: Naracoorte Caves, Transport Method: Car\nPlan ID: 20251005, Destination: Hahndorf German Village, Transport Method: Car\nPlan ID: 20251019, Destination: Adelaide Central Market, Transport Method: Airplane\n\n\n\n\nUse the given data to create a travel.txt file for your module\nUse file operations (open, read/write, close) to load the data into Python\nCreate a function called show_loaded_data() to display the loaded data\n\nHow to open and read the raw data in Python\nfile = open(\"travel.txt\", \"r\")\n\nbig_string = file.read()\nprint(big_string)\n\nlines = big_string.splitlines()\nfor line in lines:\n    print(line)\n\n# OR\nlines = file.readlines()\nfor line in lines:\n    print(line)\n\n\nfile.close()\n\n\n\n\nConsider four data structure options (list of lists, list of dictionaries, dictionary of dictionaries, dictionary of lists) and choose one\nProcess each row into three items and insert them into the chosen data structure\nUse a loop to display the data in the following order: “Destination”, “Transport Method”, “ID”\nAdd a separator such as a dash between items: Werribee Open Range Zoo - Car - 20250105\nCreate a function called show_data() to display the data\nUse a parameter called separator to allow users to customise the separator\nWrite a doctest to verify that the data type is correct\n\ndef show_data(data, separator=' - '):\n    \"\"\"\n    Display each item in the travel data with the given separator.\n\n    &gt;&gt;&gt; sample_data = [\n    ...     ['Werribee Open Range Zoo', 'Car', '20250105'],\n    ...     ['Melbourne Museum', 'Train', '20250106']\n    ... ]\n    &gt;&gt;&gt; show_data(sample_data, separator=' - ')\n    Werribee Open Range Zoo - Car - 20250105\n    Melbourne Museum - Train - 20250106\n    \"\"\"\n    for row in data:\n        print(separator.join(row))\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n\n\n\n\nChoose one sorting algorithm to implement: either Selection Sort or Quick Sort\nChoose one field (e.g. Destination, Transport Method, or ID) to sort the data by\nCreate a sorting function with parameters like: bubble_sort_by_field(data, field)\n\nNote: To ensure you meet the test requirements, copy both the Selection Sort and Quick Sort Python code into your folder.\n\n\n\n\nLoad and process the data file into the data structure data2d\nWrite a custom test function: test_data2d_row_length()\nWrite a second test function: test_data2d_item_number()\nPropose a third test function:\n\n\n\n\n\nChoose one search algorithm to implement: either Linear Search or Binary Search\nChoose one field to search within the data\nCreate a search function with parameters like: xxx_search_by_field(data, field)"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "VCE Software Development Blog",
    "section": "",
    "text": "Post With Code\n\n\n\nnews\n\ncode\n\nanalysis\n\n\n\n\n\n\n\n\n\nMay 15, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nModule 3 Practice Task\n\n\n\nmodule3\n\nprogramming\n\n\n\nA text-based Module 3 task\n\n\n\n\n\nMay 15, 2025\n\n\nYour Name\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nMay 12, 2025\n\n\nTristan O’Malley\n\n\n\n\n\nNo matching items"
  }
]